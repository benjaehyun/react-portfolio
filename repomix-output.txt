This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-01-14T05:51:04.810Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

================================================================
Directory Structure
================================================================
public/
  index.html
  manifest.json
  robots.txt
src/
  components/
    Footer/
      Footer.jsx
    LunchbreakComponents/
      BackgroundComponent.jsx
      FigmaEmbed.jsx
      OverviewAndGoalsComponent.jsx
      ProjectTimeline.jsx
      TableofContents.jsx
      TechnologiesComponent.jsx
      TextSectionComponent.jsx
      TimelineItem.jsx
    Navbar/
      Navbar.jsx
    Navigation/
      Navigation.jsx
    OngoingProjectsCard/
      OngoingProjectsCard.jsx
    ProjectPreview/
      ProjectPreview.jsx
    ProjectsCard/
      ProjectsCard.jsx
    ProjectsList/
      ProjectsList.jsx
  context/
    NavigationContext.js
  hooks/
    useScroll.js
  pages/
    AboutPage/
      AboutPage.jsx
    App/
      App.css
      App.jsx
    BrewistaProjectPage/
      BrewistaProjectPage.jsx
    CardioProjectPage/
      CardioProjectPage.jsx
    ContactPage/
      ContactPage.jsx
    HomePage/
      HomePage.jsx
    LowkeyProjectPage/
      LowkeyProjectPage.jsx
    LunchbreakProjectPage/
      LunchbreakProjectPage.jsx
    NotFoundPage/
      NotFoundPage.jsx
    ProjectsPage/
      ProjectsPage.jsx
    SweeperProjectPage/
      SweeperProjectPage.jsx
    TheDraftProjectPage/
      TheDraftProjectPage.jsx
  utilities/
    OptimizedBackground.js
    ScrollToTop.js
  index.css
  index.js
  reportWebVitals.js
  setupTests.js
.gitignore
package.json
process-hobby-images.js
README.md
tailwind.config.js

================================================================
Files
================================================================

================
File: public/index.html
================
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>Ben Lee</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>

================
File: public/manifest.json
================
{
  "short_name": "React App",
  "name": "Create React App Sample",
  "icons": [
    {
      "src": "favicon.ico",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/x-icon"
    },
    {
      "src": "logo192.png",
      "type": "image/png",
      "sizes": "192x192"
    },
    {
      "src": "logo512.png",
      "type": "image/png",
      "sizes": "512x512"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#000000",
  "background_color": "#ffffff"
}

================
File: public/robots.txt
================
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

================
File: src/components/Footer/Footer.jsx
================
import { Link } from "react-router-dom";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faLinkedin, faGithub } from "@fortawesome/free-brands-svg-icons";
import { faEnvelope } from "@fortawesome/free-solid-svg-icons";

export default function Footer() {

    return (
        // <div className="h-64 w-full absolute bg-zinc-700">
        //     <div className="h-full flex ml-[16vw] mr-[25vw] items-center text-white ">
        //         <div className="w-full">
        //             <h1 className="w-full font-serif text-4xl">Ben Lee</h1> 
        //             <h2 className="font-sans italic"> Feel free to reach out or say hi! </h2>
        //             <div className="mt-4 flex justify-center space-x-12">
        //                 <a href="https://github.com/benjaehyun" target="_blank" rel="noopener noreferrer" className='text-4xl'> <FontAwesomeIcon icon={faGithub} /> </a> <br />
        //                 <a href="https://www.linkedin.com/in/benjaehyun/" target="_blank" rel="noopener noreferrer" className='text-4xl'><FontAwesomeIcon icon={faLinkedin} /></a> <br />
        //                 <a href = "mailto: benjaminjaelee@gmail.com" className="text-4xl"><FontAwesomeIcon icon={faEnvelope} /></a>
        //             </div>
        //         </div>
        //         <div className="w-full  flex justify-evenly items-center font-mono font-extralight text-lg">
        //             <Link to='/' className=""> Home </Link>
        //             <Link to='/projects' className=""> Projects </Link>
        //             <Link to='/about' className=""> About Me </Link>
        //             {/* <Link to='/contact' className=" "> Contact </Link> */}
        //         </div>
        //     </div>
        // </div>
        <div className="w-full bg-zinc-700 p-6">
            <div className="flex flex-col items-center md:flex-row md:justify-between md:ml-[16vw] md:mr-[25vw] text-white">
                <div className="flex-1 mb-6 md:mb-0">
                    <h1 className="font-serif text-4xl">Ben Lee</h1>
                    <h2 className="font-sans italic text-lg mt-2">Feel free to reach out or say hi!</h2>
                    <div className="mt-4 flex justify-center">
                        <a href="https://github.com/benjaehyun" target="_blank" rel="noopener noreferrer" className='text-4xl mx-2 md:mx-4'>
                            <FontAwesomeIcon icon={faGithub} />
                        </a>
                        <a href="https://www.linkedin.com/in/benjaehyun/" target="_blank" rel="noopener noreferrer" className='text-4xl mx-2 md:mx-4'>
                            <FontAwesomeIcon icon={faLinkedin} />
                        </a>
                        <a href="mailto:benjaminjaelee@gmail.com" className="text-4xl mx-2 md:mx-4">
                            <FontAwesomeIcon icon={faEnvelope} />
                        </a>
                    </div>
                </div>
                <div className="flex-1 flex flex-col items-center md:flex-row md:justify-end font-mono font-extralight text-lg">
                    <Link to='/' className="mb-4 md:mb-0 md:mr-4">Home</Link>
                    <Link to='/projects' className="mb-4 md:mb-0 md:mx-4">Projects</Link>
                    <Link to='/about' className="mb-4 md:mb-0 md:mx-4">About Me</Link>
                    <Link to='/contact' className="mb-4 md:mb-0 md:ml-4">Contact</Link>
                </div>
            </div>
    </div>
    )
}

================
File: src/components/LunchbreakComponents/BackgroundComponent.jsx
================
import React from 'react'

export default function BackgroundComponent() {
  return (
    <section id="background" className="py-6 px-4 lg:px-8 max-w-4xl mx-auto text-white bg-gray-800 rounded-lg">
            <h2 className="text-2xl font-bold mb-4">Project Background</h2>
            <p className="text-lg mb-4">
                Soon after my bootcamp, a small group of 3 other cohort-mates and I, all hungry to expand our horizons beyond what our coursework offered, decided to continue our learning journey together. It wasn't long before this initiative led to an exciting opportunity where one of us was connected with someone in need of a developer team to bring an application idea to life.
            </p>
            <p className="text-lg mb-4">
                Eager to put our skills to the test, we met with the potential client. The meeting was a deep dive into their vision, outlining specific goals and features crucial for the application. 
            </p>
            <p className="text-lg mb-4">
                The choice of technology stack was a critical juncture. With the insights we gathered from various mentors, we decided on React and Django. While familiar with each independently, we had never combined them in a project. This decision opened up a new chapter of learning, especially with Django REST Framework to expose our backend API.
            </p>
            <p className="text-lg">
                This project wasn't just about utilizing new technologies; it was also our first encounter with building a significantly robust security system. The kind of security required went beyond what we had encountered in our bootcamp projects, pushing us to dive into areas we had never explored before.
            </p>
        </section>
  )
}

================
File: src/components/LunchbreakComponents/FigmaEmbed.jsx
================
import React from 'react'

export default function FigmaEmbed() {
    const figmaEmbedUrl = "https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Fproto%2Fj8dPEgun1sb3OeDAWSEWJw%2FFoodSquad%3Ftype%3Ddesign%26node-id%3D1-6%26t%3DB8VKjx23rwkuZp1X-1%26scaling%3Dscale-down%26page-id%3D0%253A1%26mode%3Ddesign" 
  return (
    <div className="flex justify-center items-center w-full">
        <iframe
            className="w-full max-w-xs h-[740px] border border-gray-200 rounded-lg shadow-lg" // Adjust height as needed; max-w-xs approximates a mobile width
            src="https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Fproto%2Fj8dPEgun1sb3OeDAWSEWJw%2FFoodSquad%3Ftype%3Ddesign%26node-id%3D1-6%26t%3DB8VKjx23rwkuZp1X-1%26scaling%3Dscale-down%26page-id%3D0%253A1%26mode%3Ddesign"
            allowFullScreen
        ></iframe>
    </div>

  )
}

================
File: src/components/LunchbreakComponents/OverviewAndGoalsComponent.jsx
================
import React from 'react'

export default function OverviewAndGoalsComponent() {
    return (
        <section id="overview" className="py-6 px-4 lg:px-8 max-w-4xl mx-auto text-white">
            <h2 className="text-2xl font-bold mb-4">Overview and Key Features</h2>
            <p className="text-lg mb-4">
            LunchBreak is a comprehensive web application designed to transform corporate dining experiences. By seamlessly connecting employees and companies with a wide array of restaurant options, the platform facilitates efficient meal ordering, budget management, and menu customization. Developed with a keen focus on user experience and operational efficiency, LunchBreak utilizes a robust tech stack comprising Django and React, alongside Django REST Framework for dynamic API interactions and JsonWebTokens for secure authentication.
            </p>
            <ul className="list-disc pl-5 text-lg">
                <li>Dynamic Restaurant Menus: Company employees can explore and order from menus that are tailored to their dietary preferences and available on specified days, ensuring a diverse dining experience.</li>
                <li>Budget and Expense Tracking: Companies have the ability to set dining budgets for their employees, enabling effective cost control while still offering choice and flexibility.</li>
                <li>Advanced Menu Customization: Restaurants benefit from an intuitive interface to manage their menu offerings, including the ability to specify available days and customize items with add-ons, catering to a wide range of needs for diverse menus.</li>
                <li>Responsive and Accessible Design: Adopting a mobile-first design philosophy, guaranteeing a seamless and engaging user interface across all devices and platforms.</li>
            </ul>
        </section>
    );
}

================
File: src/components/LunchbreakComponents/ProjectTimeline.jsx
================
import React, { useEffect } from 'react'
import AOS from 'aos'
import 'aos/dist/aos.css'
import TimelineItem from './TimelineItem';

export default function ProjectTimeline() {
    useEffect(() => {
        AOS.init({
            duration: 1000, 
            once: true, // Whether animation should happen only once - while scrolling down
        });
    }, []);

    const timelineData = [
        { 
            title: "Project Kickoff", 
            description: "We gathered as a team to define our project scope and objectives.", 
            details: ["Defined initial project scope", "Set up initial project milestones", "Agreed on communication protocols"],
            side: 'left' 
        },
        { 
            title: "Tech Stack Decision", 
            description: "After consulting with mentors, we decided on React and Django.", 
            details: ["Evaluated different tech stacks", "Consulted with industry mentors", "Chose React for the frontend and Django for the backend"],
            side: 'right' 
        },
        // Add more timeline items 
    ];


    return (
        <section className="py-12 bg-gray-800 text-white">
            <div className="max-w-4xl mx-auto">
                <h2 className="text-3xl font-bold text-center mb-8">Project Timeline</h2>
                <div className="border-l-2 border-blue-500 pl-4">
                    {timelineData.map((item, index) => (
                        <TimelineItem key={index} {...item} />
                    ))}
                </div>
            </div>
        </section>
    );
}

================
File: src/components/LunchbreakComponents/TableofContents.jsx
================
import React from 'react'

export default function TableofContents() {
  return (
    <nav className=" p-4 bg-slate-600 lg:p-8">
        <ul className="space-y-2">
            <li><a href="#overview" className="text-white hover:text-slate-900 transition-colors">Overview and Key Features</a></li>
            <li><a href="#technologies" className="text-white hover:text-slate-900 transition-colors">Technologies Used</a></li>
            <li><a href="#background" className="text-white hover:text-slate-900 transition-colors">Background</a></li>
            <li><a href="#timeline" className="text-white hover:text-slate-900 transition-colors">Project Timeline</a></li>
        </ul>
    </nav>

  )
}

================
File: src/components/LunchbreakComponents/TechnologiesComponent.jsx
================
import React from 'react';
import { ReactOriginal, DjangoPlain, PostgresqlPlainWordmark, DjangorestLineWordmark, TailwindcssOriginal } from 'devicons-react';


export default function TechnologiesComponent() {
    return (
        <section id="technologies" className="py-6 px-4 lg:px-8 max-w-4xl mx-auto text-white">
            <h2 className="text-2xl font-bold mb-6">Technologies Used</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-6">
                <div className="flex flex-col items-center text-center">
                    <ReactOriginal size='50' />
                    <p className="font-semibold">React.js</p>
                    <p>Used for building the dynamic user interface, ensuring a responsive and interactive experience.</p>
                </div>
                <div className="flex flex-col items-center text-center">
                    <DjangoPlain size='50'/>
                    <p className="font-semibold">Django</p>
                    <p>Handled server-side logic, including API endpoints, and served as the framework for the admin panel and user management.</p>
                </div>
                <div className="flex flex-col items-center text-center">
                    <PostgresqlPlainWordmark  size='50'/>
                    <p className="font-semibold">PostgreSQL</p>
                    <p>Chosen for its robustness and reliability in storing user data, company details, orders, and restaurant information efficiently.</p>
                </div>
                <div className="flex flex-col items-center text-center">
                    <DjangorestLineWordmark  size='50'/>
                    <p className="font-semibold">DjangoRESTFramework</p>
                    <p>Empowered the backend to efficiently create RESTful APIs. Key for authentication mechanisms, data serialization, and request handling, providing a seamless bridge between the frontend and database.</p>
                </div>
                <div className="flex flex-col items-center text-center">
                    <TailwindcssOriginal  size='50'/>
                    <p className="font-semibold">Tailwind CSS</p>
                    <p>Utilized to style the frontend, allowing for rapid development of custom, responsive designs without leaving the HTML.</p>
                </div>
            </div>
        </section>
    );
}

================
File: src/components/LunchbreakComponents/TextSectionComponent.jsx
================
import React from 'react'

export default function TextSectionComponent() {
  return (
    <section className="py-6 px-4 lg:px-8 max-w-4xl mx-auto">
        <h2 className="text-2xl text-white font-bold mb-4">Section Title</h2>
        <p className="text-white text-lg">This is an example of section content that is engaging and easy to read, focusing on user experience across all devices.</p>
        {/* Additional content styled similarly */}
    </section>

  )
}

================
File: src/components/LunchbreakComponents/TimelineItem.jsx
================
import React, { useState } from 'react';
import { AiOutlinePlus, AiOutlineMinus } from 'react-icons/ai';

export default function TimelineItem({ title, description, details, side }) {
    const [isOpen, setIsOpen] = useState(false);

    return (
        <div className={`flex flex-col my-8 items-center ${side === 'right' ? 'text-right' : 'text-left'}`} data-aos="fade-up">
            {/* Wrap the entire item for unified hover effects */}
            <div 
                className="group cursor-pointer transition duration-300 ease-in-out transform hover:scale-105 hover:shadow-lg"
                onClick={() => setIsOpen(!isOpen)}
            >
                <div className={`flex items-center ${side === 'right' ? 'flex-row-reverse space-x-reverse' : ''} space-x-4`}>
                    <div className="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center transition-colors duration-300 ease-in-out group-hover:bg-blue-600">
                        {isOpen ? <AiOutlineMinus className="text-white" /> : <AiOutlinePlus className="text-white" />}
                    </div>
                    <h3 className="text-xl font-semibold inline">{title}</h3>
                </div>
                <p className="mt-2">{description}</p>
            </div>
            {isOpen && (
                <div className="mt-4 py-4 px-8 bg-gray-700 rounded-lg">
                    {details.map((detail, index) => (
                        <p key={index}>{detail}</p>
                    ))}
                </div>
            )}
        </div>
    );
}

================
File: src/components/Navbar/Navbar.jsx
================
// import { useState, useEffect } from 'react'
// import { Link } from "react-router-dom";
// import { FaBars, FaTimes } from 'react-icons/fa';

// export default function Navbar() {
//     const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

//     useEffect(() => {
//         function handleResize() {
//           if (window.innerWidth >= 768) { // Tailwind's default breakpoint for 'md'
//             setIsMobileMenuOpen(false);
//           }
//         }
    
//         window.addEventListener('resize', handleResize);
    
//         // Clean up the event listener on component unmount
//         return () => window.removeEventListener('resize', handleResize);
//       }, []);

//     return (
//         <div className="relative h-40">
//         <div className="flex items-center justify-between h-full px-4 sm:px-6 lg:ml-[16vw] lg:mr-[25vw]">
//             <Link to='/' >
//                 <h1 className="font-serif text-4xl text-white whitespace-nowrap">Ben Lee</h1>
//             </Link>
//           <div className="flex items-center">
//             <div className="md:hidden">
//               <button onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}>
//                 {isMobileMenuOpen ? <FaTimes size={24} className="text-white" /> : <FaBars size={24} className="text-white" />}
//               </button>
//             </div>
//             {/* Add margin to each link for spacing */}
//             <div className="hidden md:flex w-full justify-evenly items-center font-mono font-extralight text-lg text-white">
//               <Link to='/' className="mr-4">Home</Link>
//               <Link to='/projects' className="mx-4">Projects</Link>
//               <Link to='/about' className="ml-4">About Me</Link>
//             </div>
//           </div>
//           {isMobileMenuOpen && (
//             <div className="absolute top-full left-0 right-0 bg-[#282c34]/75 font-mono font-extralight text-lg z-10 flex flex-col items-center py-4">
//               <Link to='/' className="text-white py-2">Home</Link>
//               <Link to='/projects' className="text-white py-2">Projects</Link>
//               <Link to='/about' className="text-white py-2">About Me</Link>
//             </div>
//           )}
//         </div>
//       </div>

//     )
// }


import { useState, useEffect } from 'react'
import { Link } from "react-router-dom";
import { FaBars, FaTimes } from 'react-icons/fa';

export default function Navbar({isMobileMenuOpen, setIsMobileMenuOpen}) {
    // const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

    useEffect(() => {
        function handleResize() {
          if (window.innerWidth >= 768) { // Tailwind's default breakpoint for 'md'
            setIsMobileMenuOpen(false);
          }
        }
    
        window.addEventListener('resize', handleResize);
    
        // Clean up the event listener on component unmount
        return () => window.removeEventListener('resize', handleResize);
      }, []);

    // Function to close the mobile menu (Newly added)
    const closeMobileMenu = () => setIsMobileMenuOpen(false);

    return (
        <div className="relative h-40 ">
            <div className="flex items-center justify-between h-full px-4 sm:px-6 lg:ml-[16vw] lg:mr-[25vw]">
                <Link to='/' onClick={closeMobileMenu}> {/* Added onClick event to close menu */}
                    <h1 className="font-serif text-4xl text-white whitespace-nowrap">Ben Lee</h1>
                </Link>
                <div className="flex items-center">
                    <div className="md:hidden">
                        <button onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}>
                            {isMobileMenuOpen ? <FaTimes size={24} className="text-white" /> : <FaBars size={24} className="text-white" />}
                        </button>
                    </div>
                    <div className="hidden md:flex w-full justify-evenly items-center font-mono font-extralight text-lg text-white">
                        <Link to='/' className="mr-4">Home</Link>
                        <Link to='/projects' className="mx-4">Projects</Link>
                        <Link to='/about' className="mx-4">About Me</Link>
                        <Link to='/contact' className="ml-4">Contact</Link>
                    </div>
                </div>
                {isMobileMenuOpen && (
                    <div className="absolute top-full left-0 right-0 bg-[#282c34]/75 font-mono font-extralight text-lg z-10 flex flex-col items-center py-4">
                        <Link to='/' className="text-white py-2" onClick={closeMobileMenu}>Home</Link> {/* Added onClick event */}
                        <Link to='/projects' className="text-white py-2" onClick={closeMobileMenu}>Projects</Link> {/* Added onClick event */}
                        <Link to='/about' className="text-white py-2" onClick={closeMobileMenu}>About Me</Link> {/* Added onClick event */}
                        <Link to='/contact' className="text-white py-2" onClick={closeMobileMenu}>Contact</Link> {/* Added onClick event */}
                    </div>
                )}
            </div>
        </div>
    );
}

================
File: src/components/Navigation/Navigation.jsx
================
import React from 'react';
import { Link, useLocation } from 'react-router-dom';
import { motion, AnimatePresence } from 'framer-motion';
import { Menu, X } from 'lucide-react';
import { useNavigation } from '../../context/NavigationContext';
import { useScroll } from '../../hooks/useScroll';

const Navigation = () => {
  const { isMobileMenuOpen, setIsMobileMenuOpen } = useNavigation();
  const { scrolled } = useScroll();
  const location = useLocation();

  const navigationItems = [
    { path: '/', label: 'Home' },
    { path: '/projects', label: 'Projects' },
    { path: '/about', label: 'About' },
    { path: '/contact', label: 'Contact' }
  ];

  return (
    <>
      <nav
        className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 
          ${scrolled 
            ? 'bg-gray-900/80 backdrop-blur-md py-4' 
            : 'bg-gray-900/40 backdrop-blur-sm py-6'}`}
      >
        <div className="max-w-7xl mx-auto px-4 lg:px-8">
          <div className="flex items-center justify-between">
            {/* Logo */}
            <Link to="/" className="text-2xl font-bold text-white">
              Ben Lee
            </Link>

            {/* Desktop Navigation */}
            <div className="hidden md:flex items-center space-x-8">
              {navigationItems.map((item) => (
                <Link
                  key={item.path}
                  to={item.path}
                  className={`relative px-3 py-2 text-lg transition-colors ${
                    location.pathname === item.path
                      ? 'text-white'
                      : 'text-gray-300 hover:text-white'
                  }`}
                >
                  {item.label}
                  {location.pathname === item.path && (
                    <motion.div
                      layoutId="underline"
                      className="absolute left-0 right-0 bottom-0 h-0.5 bg-blue-500"
                    />
                  )}
                </Link>
              ))}
            </div>

            {/* Mobile Menu Button */}
            <button
              className="md:hidden p-2 text-gray-300 hover:text-white"
              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
            >
              {isMobileMenuOpen ? <X size={24} /> : <Menu size={24} />}
            </button>
          </div>
        </div>
      </nav>

      {/* Mobile Menu */}
      <AnimatePresence>
        {isMobileMenuOpen && (
          <>
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              className="fixed inset-0 bg-black/50 z-40 md:hidden"
              onClick={() => setIsMobileMenuOpen(false)}
            />
            <motion.div
              initial={{ x: '100%' }}
              animate={{ x: 0 }}
              exit={{ x: '100%' }}
              transition={{ type: 'tween', duration: 0.3 }}
              className="fixed top-0 right-0 bottom-0 w-64 bg-gray-900 z-50 md:hidden"
            >
              <div className="flex flex-col p-6">
                <div className="flex justify-end mb-8">
                  <button
                    className="p-2 text-gray-300 hover:text-white"
                    onClick={() => setIsMobileMenuOpen(false)}
                  >
                    <X size={24} />
                  </button>
                </div>
                {navigationItems.map((item) => (
                  <Link
                    key={item.path}
                    to={item.path}
                    className={`py-3 px-4 text-lg rounded-lg transition-colors ${
                      location.pathname === item.path
                        ? 'bg-blue-500 text-white'
                        : 'text-gray-300 hover:bg-gray-800 hover:text-white'
                    }`}
                    onClick={() => setIsMobileMenuOpen(false)}
                  >
                    {item.label}
                  </Link>
                ))}
              </div>
            </motion.div>
          </>
        )}
      </AnimatePresence>
    </>
  );
};

export default Navigation;

================
File: src/components/OngoingProjectsCard/OngoingProjectsCard.jsx
================
import React from 'react'
import { Link } from 'react-router-dom';

export default function OngoingProjectsCard({ title, description, link }) {
  return (
    <div className='mx-4 my-16'>
      <Link to={link}>
        <div className='font-mono bg-gray-700 bg-opacity-80 text-white border-solid rounded-lg border-2 border-blue-500 p-6 md:p-8 w-full md:w-[80vw] max-w-6xl mx-auto hover:bg-opacity-90 transition duration-300 ease-in-out px-4'>
          <div className='grid grid-cols-1 gap-4'>
            <h2 className='text-3xl font-bold mb-3'>{title} <span className='text-blue-400 text-xl'>(Ongoing)</span></h2>
            <p className='text-lg'>{description}</p>
          </div>
        </div>
      </Link>
    </div>
  );
}

================
File: src/components/ProjectPreview/ProjectPreview.jsx
================
import React, { useState, useCallback } from 'react';
import { Link } from 'react-router-dom';
import { motion, AnimatePresence } from 'framer-motion';
import { Github, ExternalLink, ChevronRight, ChevronLeft } from 'lucide-react';

const ProjectPreview = ({ 
  title, 
  description, 
  technologies, 
  images,
  githubUrl,
  liveUrl,
  projectLink,
  status,
  keyFeatures = []
}) => {
  const [currentImageIndex, setCurrentImageIndex] = useState(0);

  const nextImage = useCallback((e) => {
    if (e) {
      e.preventDefault();
      e.stopPropagation();
    }
    setCurrentImageIndex((prev) => (prev + 1) % images.length);
  }, [images.length]);

  const prevImage = useCallback((e) => {
    if (e) {
      e.preventDefault();
      e.stopPropagation();
    }
    setCurrentImageIndex((prev) => (prev - 1 + images.length) % images.length);
  }, [images.length]);

  const goToImage = useCallback((index, e) => {
    if (e) {
      e.preventDefault();
      e.stopPropagation();
    }
    setCurrentImageIndex(index);
  }, []);

  return (
    <div className="group">
      <Link to={`projects/${projectLink}`}>
        <motion.div
          className="relative w-full bg-gray-800/50 rounded-xl overflow-hidden hover:bg-gray-800/70 transition-colors"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
        >
          <div className="flex flex-col md:grid md:grid-cols-2 gap-6 p-6">
            {/* Project Info Section */}
            <div className="space-y-4 order-2 md:order-1">
              <div className="flex items-center space-x-3">
                <h3 className="text-2xl font-bold text-white">{title}</h3>
                {status === 'ongoing' && (
                  <span className="px-3 py-1 bg-blue-500/20 text-blue-300 rounded-full text-sm">
                    Ongoing
                  </span>
                )}
              </div>

              <p className="text-gray-300">{description}</p>

              <div className="flex flex-wrap gap-2">
                {technologies.map((tech, index) => (
                  <span
                    key={index}
                    className="px-3 py-1 bg-gray-700/50 text-gray-300 rounded-full text-sm"
                  >
                    {tech}
                  </span>
                ))}
              </div>

              {keyFeatures.length > 0 && (
                <div className="space-y-2">
                  <h4 className="text-lg font-semibold text-white">Key Features</h4>
                  <ul className="grid grid-cols-1 md:grid-cols-2 gap-2">
                    {keyFeatures.slice(0, 4).map((feature, index) => (
                      <li key={index} className="flex items-start text-gray-300 text-sm">
                        <ChevronRight className="w-4 h-4 mt-0.5 mr-1 text-blue-400 flex-shrink-0" />
                        <span>{feature}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              )}

              {/* External Links */}
              <div className="flex items-center space-x-4 pt-2">
                {(githubUrl || liveUrl) && (
                  <div className="flex space-x-2">
                    {githubUrl && (
                      <a
                        href={githubUrl}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="p-3 bg-gray-700 text-gray-300 rounded-lg hover:bg-gray-600 transition-colors"
                        onClick={(e) => e.stopPropagation()}
                      >
                        <Github className="w-5 h-5" />
                      </a>
                    )}
                    {liveUrl && (
                      <a
                        href={liveUrl}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="p-3 bg-gray-700 text-gray-300 rounded-lg hover:bg-gray-600 transition-colors"
                        onClick={(e) => e.stopPropagation()}
                      >
                        <ExternalLink className="w-5 h-5" />
                      </a>
                    )}
                  </div>
                )}
              </div>
            </div>

            {/* Project Preview Section */}
            <div className="relative h-64 sm:h-72 md:h-80 rounded-lg overflow-hidden order-1 md:order-2">
              {/* Images */}
              <div className="relative h-full bg-gray-900">
                <AnimatePresence initial={false} mode="wait">
                  <motion.img
                    key={currentImageIndex}
                    src={images[currentImageIndex]}
                    alt={`${title} preview ${currentImageIndex + 1}`}
                    className="absolute inset-0 w-full h-full object-cover"
                    initial={{ opacity: 0, x: 20 }}
                    animate={{ opacity: 1, x: 0 }}
                    exit={{ opacity: 0, x: -20 }}
                    transition={{ duration: 0.2 }}
                  />
                </AnimatePresence>
              </div>

              {/* Navigation Controls - Always visible on mobile, hover on desktop */}
              {images.length > 1 && (
                <>
                  <div className="absolute inset-y-0 left-0 flex items-center md:opacity-0 md:group-hover:opacity-100 transition-opacity">
                    <button
                      onClick={prevImage}
                      className="p-3 m-2 bg-black/50 rounded-full text-white hover:bg-black/75 transition-colors"
                      aria-label="Previous image"
                    >
                      <ChevronLeft className="w-6 h-6" />
                    </button>
                  </div>
                  <div className="absolute inset-y-0 right-0 flex items-center md:opacity-0 md:group-hover:opacity-100 transition-opacity">
                    <button
                      onClick={nextImage}
                      className="p-3 m-2 bg-black/50 rounded-full text-white hover:bg-black/75 transition-colors"
                      aria-label="Next image"
                    >
                      <ChevronRight className="w-6 h-6" />
                    </button>
                  </div>

                  {/* Image Navigation Dots */}
                  <div className="absolute bottom-2 left-1/2 transform -translate-x-1/2 flex space-x-2 bg-black/50 rounded-full px-3 py-1.5">
                    {images.map((_, index) => (
                      <button
                        key={index}
                        onClick={(e) => goToImage(index, e)}
                        className={`w-2.5 h-2.5 rounded-full transition-colors ${
                          index === currentImageIndex ? 'bg-white' : 'bg-white/50 hover:bg-white/75'
                        }`}
                        aria-label={`Go to image ${index + 1}`}
                      />
                    ))}
                  </div>
                </>
              )}
            </div>
          </div>
        </motion.div>
      </Link>
    </div>
  );
};

export default ProjectPreview;

================
File: src/components/ProjectsCard/ProjectsCard.jsx
================
import React from 'react'
import { Link } from 'react-router-dom';

export default function ProjectsCard({ title, description, images, link }) {
    return (
        // <Link to={link}>
        //     <div className='text-white flex flex-col md:flex-row border-solid rounded-lg border-2 p-3 w-full md:w-[60vw] max-w-5xl mx-auto'>
        //         <div className='md:w-1/2 flex flex-col'>
        //             <h2 className='text-3xl mb-4'>{title}</h2>
        //             <div className='md:hidden'>
        //                 {images.map((image, index) => (
        //                     <img key={index} src={image} className='rounded-lg mb-2' alt={title} />
        //                 ))}
        //             </div>
        //         </div>
        //         <div className='md:w-1/2 flex flex-col justify-between'>
        //             <div className='hidden md:block'>
        //                 {images.map((image, index) => (
        //                     <img key={index} src={image} className='h-52 rounded-lg mb-2' alt={title} />
        //                 ))}
        //             </div>
        //             <p className='mt-4 md:mt-0 text-xl'>{description}</p>
        //         </div>
        //     </div>
        // </Link>

        <Link to={link}>
            <div className='bg-gray-800 bg-opacity-75 text-white border-solid rounded-lg border-2 p-6 md:p-8 w-full md:w-[80vw] max-w-6xl mx-auto hover:bg-opacity-90 transition duration-300 ease-in-out'>
                <div className='grid grid-cols-1 md:grid-cols-12 gap-6 items-center'>
                    <div className='md:col-span-4'>
                        <h2 className='text-3xl font-bold mb-3'>{title}</h2>
                        <p className='text-lg'>{description}</p>
                    </div>
                    <div className='md:col-span-8'>
                        <div className='grid grid-cols-2  md:grid-cols-2 lg:grid-cols-2 gap-4'>
                            {images.map((image, index) => (
                                <img key={index} src={image} className='rounded-lg w-full h-auto' alt={title} />
                            ))}
                        </div>
                    </div>
                </div>
            </div>
        </Link>
    );
}

================
File: src/components/ProjectsList/ProjectsList.jsx
================
import React from 'react';
import ProjectPreview from '../ProjectPreview/ProjectPreview';

const ProjectsList = ({ projects }) => {
  return (
    <div className="container mx-auto px-4 md:px-8 lg:px-16 py-8">
      <div className="space-y-16">
        {projects.map((project) => (
          <ProjectPreview
            key={project.title}
            title={project.title}
            description={project.description}
            technologies={project.technologies || []}
            images={project.images}
            githubUrl={project.githubUrl}
            liveUrl={project.liveUrl}
            projectLink={`/projects/${project.linkSuffix}`}
            status={project.status}
            keyFeatures={project.keyFeatures || []}
          />
        ))}
      </div>
    </div>
  );
};

export default ProjectsList;

================
File: src/context/NavigationContext.js
================
import { createContext, useContext, useState, useEffect } from 'react';
import { useLocation } from 'react-router-dom';

const NavigationContext = createContext();

export const NavigationProvider = ({ children }) => {
    const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
    const [isDarkBackground, setIsDarkBackground] = useState(true);
    const location = useLocation();
  
    useEffect(() => {
      // Define which routes have dark backgrounds
      const darkBackgroundRoutes = ['/projects'];
      setIsDarkBackground(darkBackgroundRoutes.includes(location.pathname));
    }, [location]);
  
    const value = {
      isMobileMenuOpen,
      setIsMobileMenuOpen,
      isDarkBackground
    };
  
    return (
      <NavigationContext.Provider value={value}>
        {children}
      </NavigationContext.Provider>
    );
  };

export const useNavigation = () => {
  const context = useContext(NavigationContext);
  if (!context) {
    throw new Error('useNavigation must be used within a NavigationProvider');
  }
  return context;
};

================
File: src/hooks/useScroll.js
================
import { useState, useEffect } from 'react';

export const useScroll = () => {
  const [scrolled, setScrolled] = useState(false);
  const [scrollY, setScrollY] = useState(0);

  useEffect(() => {
    const handleScroll = () => {
      const currentScrollY = window.scrollY;
      setScrollY(currentScrollY);
      setScrolled(currentScrollY > 20);
    };

    window.addEventListener('scroll', handleScroll, { passive: true });
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  return { scrolled, scrollY };
};

================
File: src/pages/AboutPage/AboutPage.jsx
================
// import { PythonOriginal, JavascriptOriginal, ReactOriginal, ExpressOriginal, Html5Original, Css3Original, BootstrapOriginal, TailwindcssPlain, DjangoPlainWordmark, MongodbOriginal, PostgresqlOriginal, GithubOriginal, AmazonwebservicesOriginal, NodejsOriginal } from 'devicons-react';
import { 
    DiJavascript1 as JavascriptOriginal,
    DiPython as PythonOriginal,
    DiReact as ReactOriginal,
    DiNodejs as NodejsOriginal,
    DiHtml5 as Html5Original,
    DiCss3 as Css3Original,
    DiMongodb as MongodbOriginal,
    DiPostgresql as PostgresqlOriginal,
    DiGithub as GithubOriginal,
  } from 'react-icons/di';
  
  import {
    SiExpress as ExpressOriginal,
    SiBootstrap as BootstrapOriginal,
    SiTailwindcss as TailwindcssPlain,
    SiDjango as DjangoPlainWordmark,
    SiAmazonaws as AmazonwebservicesOriginal,
  } from 'react-icons/si';



export default function AboutPage ({isMobileMenuOpen}) {
    
    const paddingTopClass = isMobileMenuOpen ? 'pt-[25vh]' : 'pt-[10vh]';

    return (
        <>
            {/* <div 
            style={{
                backgroundImage: 'url("hobby/millpark.jpg")', 
                backgroundSize: "cover",
                backgroundPosition: "center"
            }}
            className='top-0 h-[80vh] absolute w-full z-[-1] blur-md'
            >
            </div>
            <div className="flex justify-center items-center mt-[10vh]">
                <img src="me/wedding-photo.png" style={{scale: '1.4'}} alt="" className="w-[12vw] z-1  border-solid rounded-full border-2" />
                <div className="w-[30vw] ml-16">
                <h1 className='text-white text-4xl'> A pre-med student turned engineer and new Seattleite with a passion for elegant solutions.</h1> <br />
                <h3 className="text-white text-xl italic">And recent graduate of General Assembly's Software Engineering Immersive Program! </h3>
                </div>
            </div> */}


            {/* <div 
                style={{
                    backgroundImage: 'url("hobby/millpark.jpg")'
                }}
                className='h-[90vh] md:h-[80vh] lg:h-[75vh] bg-cover bg-center absolute w-full z-[-1] blur-md top-0 left-0'
            >
            </div>
            <div className="flex flex-col md:flex-row justify-center items-center pt-[10vh] md:pt-[15vh] relative">
                <img src="me/wedding-photo.png" alt="Ben Lee" className="w-32 md:w-[12vw] z-10 border-solid rounded-full border-2 border-white" />
                <div className="w-4/5 md:w-[30vw] mt-4 md:mt-0 md:ml-16 p-4">
                    <h1 className='text-white text-2xl md:text-4xl'>A pre-med student turned engineer and new Seattleite with a passion for elegant solutions.</h1> <br />
                    <h3 className="text-white text-lg md:text-xl italic">And recent graduate of General Assembly's Software Engineering Immersive Program!</h3>
                </div>
            </div> */}


            {/* <div className="flex flex-col items-center mb-[15vh] space-y-24 mt-[40vh]">
                <div className="w-[60vw]">
                    <h1 className="text-white text-5xl"> Hi 👋, Glad you were able to find me! </h1> <br /> <br />
                    <h1 className="text-white text-xl text-left"> I'm Ben, and I am currently based in Seattle, WA. I'm a creative-minded software
                    developer with a passion for elegant solutions to enrich user experiences.
                    <br />
                    <br />
                    Before embarking on my journey of becoming a developer, I was fully immersed in my pre-med studies in university, MCAT taken and all. Then the covid-19 pandemic pumped the brakes on school, 
                    volunteer work, and anything else that I could've been doing in preparation for medical school. For the first time, I was able to take a break and take a step back. In that time, 
                    I discovered a profound interest in the limitless possibilities in tech, more specifically: software development.  */}
                    {/* Even now, it's hard for me to pinpoint exactly what it was that drew me to this field, whether it was the 
                    deeply logical nature of computer science, the seemingly infinite range of problems that you could face at any given moment, the elegant solutions, or the boundless reach of enriching user experiences through products.   */}
                    {/* <br />
                    <br />
                    I took an admittedly risky step to transition into a SWE career and enrolled in an intensive bootcamp. Through countless lines 
                    of code, rigorious problem-solving, and the invaluable support of my mentors and peers, I graduated and fell deeper into what's nothing short of an infatuation with coding. I think
                    that my pivot from medicine to tech has equipped me with a unique blend of skills including: attention to detail, a strong analytical mindset, and the ability to approach challenges with 
                    resilience and a fresh perspective.
                    <br />
                    <br />
                    I'm currently looking for that next step to push impactful products and contribute meaningfully to the dynamic landscape of technology.
                    </h1>
                </div> */}

                <div 
                    style={{
                    backgroundImage: 'url("hobby/millpark.jpg")'
                    }}
                    className='h-[90vh] md:h-[80vh] lg:h-[90vh] bg-cover bg-center absolute w-full z-[-1] blur-md top-0 left-0'
                />
                
                <div className={`flex flex-col md:flex-row justify-center items-center ${paddingTopClass} md:pt-[9vh] relative `}>
                    <img src="me/wedding-photo.png" alt="Ben Lee" className="w-32 md:w-[20vw] rounded-full border-2 border-white" />
                    <div className="w-4/5 md:w-[30vw] mt-4 md:mt-0 md:ml-16 p-4">
                        <h1 className='text-white text-2xl md:text-4xl'>A pre-med student turned engineer and new Seattleite with a passion for elegant solutions.</h1> <br />
                        <h3 className="text-white text-lg md:text-xl italic">And recent graduate of General Assembly's Software Engineering Immersive Program!</h3>
                    </div>
                </div>
                <div className="flex flex-col items-center mb-10 md:mb-[15vh] space-y-12 md:space-y-24 pt-[35vh] md:pt-[30vh] lg:pt-[46vh] px-4 relative z-10">
                    <div className="w-full md:w-[60vw] text-center md:text-left">
                        <h1 className="text-white text-center text-3xl md:text-5xl"> Hi 👋, Glad you were able to find me! </h1> <br /> <br />
                        <h2 className="text-white text-lg md:text-xl leading-normal md:leading-relaxed"> 
                            I'm Ben, and I am currently based in Seattle, WA. I'm a creative-minded software
                            developer with a passion for elegant solutions to enrich user experiences.
                            <br /><br />
                            Before embarking on my journey of becoming a developer, I was fully immersed in my pre-med studies in university, MCAT taken and all. Then the covid-19 pandemic pumped the brakes on school, 
                            volunteer work, and anything else that I could've been doing in preparation for medical school. For the first time, I was able to take a break and take a step back. In that time, 
                            I discovered a profound interest in the limitless possibilities in tech, more specifically: software development. 
                            <br /><br />
                            I took an admittedly risky step to transition into a SWE career and enrolled in an intensive bootcamp. Through countless lines 
                            of code, rigorous problem-solving, and the invaluable support of my mentors and peers, I graduated and fell deeper into what's nothing short of an infatuation with coding. I think
                            that my pivot from medicine to tech has equipped me with a unique blend of skills including: attention to detail, a strong analytical mindset, and the ability to approach challenges with 
                            resilience and a fresh perspective.
                            <br /><br />
                            I'm currently looking for that next step to push impactful products and contribute meaningfully to the dynamic landscape of technology.
                        </h2>
                    </div>
  
                


                {/* <div className="border-solid w-2/4 rounded-md border-2 p-12 bg-slate-600/40">
                    <h1 className="text-white text-4xl"> Skills </h1>
                    <ul className="text-white list-disc flex flex-col justify-evenly space-y-5 mt-12">
                        <div className='grid grid-cols-7 grid-row-2 gap-y-5'> */}


                    <div className="border-solid w-full md:w-2/4 rounded-md border-2 p-12 bg-slate-600/40">
                        <h1 className="text-white text-4xl"> Skills </h1>
                        <ul className="text-white list-disc flex flex-col justify-evenly space-y-5 mt-12">
                            <div className='grid grid-cols-2 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-7 gap-5'>
                                <li className='flex flex-col items-center'> <JavascriptOriginal size='30'/> JavaScript</li>
                                <li className='flex flex-col items-center'> <PythonOriginal size="30"/> Python</li>
                                <li className='flex flex-col items-center'> <ReactOriginal size="30"/> React</li>
                                <li className='flex flex-col items-center'> <ExpressOriginal size="30"/> Express</li>
                                <li className='flex flex-col items-center'> <Html5Original size="30"/> HTML</li>

                                <li className='flex flex-col items-center'> <Css3Original size="30"/> CSS</li>
                                <li className='flex flex-col items-center'> <BootstrapOriginal size="30"/> Bootstrap</li>
                                <li className='flex flex-col items-center'> <TailwindcssPlain size="30"/> Tailwind</li>
                                <li className='flex flex-col items-center'> <AmazonwebservicesOriginal size="30"/> AWS S3</li>
                                <li className='flex flex-col items-center'> <DjangoPlainWordmark size="30"/> Django</li>

                                <li className='flex flex-col items-center'> <MongodbOriginal size="30"/> MongoDB</li>
                                <li className='flex flex-col items-center'> <PostgresqlOriginal size="30"/> PostgreSQL</li>
                                <li className='flex flex-col items-center'> <GithubOriginal size="30"/> Github</li>
                                <li className='flex flex-col items-center'> <NodejsOriginal size="30"/> Nodejs</li>
                            </div>
                        </ul>
                    </div>


{/* original implementation */}
                {/* <div>
                    <h1 className="text-white text-3xl mb-6">Find me on: </h1>
                    <a href="https://github.com/benjaehyun" target="_blank" rel="noopener noreferrer" className='text-white underline text-2xl'> GitHub </a>  &nbsp; <span className="text-white text-2xl">||</span> &nbsp;
                    <a href="https://www.linkedin.com/in/benjaehyun/" target="_blank" rel="noopener noreferrer" className='text-white underline text-2xl'>LinkedIn</a>
                </div>
                <div className="text-center flex items-center justify-center">
                    <img src="hobby/seattle.jpg" alt="" className="w-[60vw] z-[-1] blur-md bottom-[10%]"/>
                    <div className="flex justify-center items-center absolute">
                        <img src="me/hobby-2.png" alt="" className="w-[12vw] z-1 border-solid rounded-full border-2" />
                        <div className="w-[30vw] ml-16">
                            <h1 className='text-black text-4xl italic'> A little more about me: </h1> <br /> 
                            <h3 className="text-black text-xl bg-slate-100/25 p-6 border-hidden rounded-lg border-2 "> I'm a 2nd gen Korean-American born and raised in Oklahoma. <br /> <br />
                            <span className="text-justify">
                            Some of my favorite hobbies include: golf, photography (all of the photos on my site are photos I've taken!), cooking for friends, and reading when I have down time (which I can't seem to find much of these days 😅)
                            I'm currently reading "yolk" by Mary HK Choi.</span> </h3>
                        </div>
                    </div>
                </div> */}

                <div>
                    <h1 className="text-white text-3xl mb-6">Find me on:</h1>
                    <a href="https://github.com/benjaehyun" target="_blank" rel="noopener noreferrer" className='text-white underline text-2xl'> GitHub </a> &nbsp; <span className="text-white text-2xl">||</span> &nbsp;
                    <a href="https://www.linkedin.com/in/benjaehyun/" target="_blank" rel="noopener noreferrer" className='text-white underline text-2xl'>LinkedIn</a>
                </div>

                {/* first iteration || test */}
                {/* <div className="relative flex items-center md:w-3/5 justify-center py-12">
                    <div className="flex items-center justify-center relative w-full mx-auto h-[20rem] sm:h-[30rem] md:h-[40rem] lg:h-[50rem]">
                        <img src="hobby/seattle.jpg" alt="" className="absolute inset-0 w-full h-full object-cover blur-md z-[-1]" />

                        <div className="z-10 p-4 space-y-4 md:space-y-0 md:space-x-6 md:flex md:flex-row md:items-center md:justify-start">
                            <img src="me/hobby-2.png" alt="" className="w-auto h-32 sm:h-48 md:h-56 rounded-full border-2 border-white" />

                            <div className="bg-slate-100/25 p-6 border-hidden rounded-lg border-2 text-left md:max-w-md lg:max-w-lg xl:max-w-xl">
                                <h1 className='text-black text-xl sm:text-2xl md:text-3xl lg:text-4xl italic'> A little more about me: </h1> <br />
                                <h3 className="text-black text-sm sm:text-md md:text-lg lg:text-xl">
                                    I'm a 2nd gen Korean-American born and raised in Oklahoma. <br /><br />
                                    Some of my favorite hobbies include: golf, photography, cooking for friends, and reading when I have down time. Currently reading "yolk" by Mary HK Choi.
                                </h3>
                            </div>
                        </div>
                    </div>
                </div> */}


{/* implementation 1 */}

{/* <div className="relative flex items-center justify-center md:w-3/5 py-12">
    <div className="flex items-center justify-center relative w-full mx-auto h-[20rem] sm:h-[30rem] md:h-[40rem] lg:h-[50rem]">
        <img src="hobby/seattle.jpg" alt="" className="absolute inset-0 w-full h-full object-cover blur-md z-[-1]" />
        <div className="z-10 p-4 space-y-4 md:space-y-0 md:space-x-6 md:flex md:flex-row md:items-center md:justify-center">
            <img src="me/hobby-2.png" alt="" className="w-auto h-32 sm:h-48 md:h-64 lg:h-72 rounded-full border-2 border-white" />
            <div className="bg-slate-100/25 p-6 border-hidden rounded-lg border-2 text-center md:text-left md:max-w-md lg:max-w-lg xl:max-w-xl">
                <h1 className='text-black text-xl sm:text-2xl md:text-3xl lg:text-4xl italic'> A little more about me: </h1> <br />
                <h3 className="text-black text-sm sm:text-md md:text-lg lg:text-xl">
                    I'm a 2nd gen Korean-American born and raised in Oklahoma. <br /><br />
                    Some of my favorite hobbies include: golf, photography, cooking for friends, and reading when I have down time. Currently reading "yolk" by Mary HK Choi.
                </h3>
            </div>
        </div>
    </div>
</div> */}


{/* implementation 2 */}

{/* <div className="relative flex items-center justify-center md:w-3/5 py-12">

    <div className="flex items-center justify-center relative w-full mx-auto h-[30rem] sm:h-[40rem] md:h-[40rem] lg:h-[50rem]">

        <img src="hobby/seattle.jpg" alt="" className="absolute inset-0 w-full h-full object-cover blur-md z-[-1]" />

    
        <div className="z-10 p-4 space-y-4 md:space-y-0 md:space-x-6 md:flex md:flex-row md:items-center md:justify-center">
          
            <div className="flex justify-center w-full md:w-auto">
                <img src="me/hobby-2.png" alt="" className="w-auto h-32 sm:h-48 md:h-64 lg:h-72 rounded-full border-2 border-white" />
            </div>

            <div className="bg-slate-100/25 p-6 border-hidden rounded-lg border-2 text-center md:text-left md:max-w-md lg:max-w-lg xl:max-w-xl">
                <h1 className='text-black text-xl sm:text-2xl md:text-3xl lg:text-4xl italic'> A little more about me: </h1> <br />
                <h3 className="text-black text-sm sm:text-md md:text-lg lg:text-xl">
                    I'm a 2nd gen Korean-American born and raised in Oklahoma. <br /><br />
                    Some of my favorite hobbies include: golf, photography, cooking for friends, and reading when I have down time. Currently reading "yolk" by Mary HK Choi.
                </h3>
            </div>
        </div>
    </div>
</div> */}

{/* implementation 3 */}

{/* <div className="relative flex items-center justify-center md:w-3/5 py-12">
    <div className="flex items-center justify-center relative w-full mx-auto h-[30rem] sm:h-[40rem] md:h-[40rem] lg:h-[50rem]">
        <img src="hobby/seattle.jpg" alt="" className="absolute inset-0 w-full h-full object-cover blur-md z-[-1]" />
        <div className="z-10 p-4 space-y-4 md:space-y-0 md:space-x-6 md:flex md:flex-row md:items-center md:justify-center">
            <div className="flex justify-center items-center w-full md:w-auto">
                <img src="me/hobby-2.png" alt="" className="h-auto w-1/3 md:w-48 lg:w-64 rounded-full border-2 border-white" />
            </div>
            <div className="bg-slate-100/25 p-6 border-hidden rounded-lg border-2 text-center md:text-left md:max-w-md lg:max-w-lg xl:max-w-xl mx-auto">
                <h1 className='text-black text-xl sm:text-2xl md:text-3xl lg:text-4xl italic'> A little more about me: </h1> <br />
                <h3 className="text-black text-sm sm:text-md md:text-lg lg:text-xl">
                    I'm a 2nd gen Korean-American born and raised in Oklahoma. <br /><br />
                    Some of my favorite hobbies include: golf, photography, cooking for friends, and reading when I have down time. Currently reading "yolk" by Mary HK Choi.
                </h3>
            </div>
        </div>
    </div>
</div> */}


{/* implementation 4 */}

                <div className="relative flex items-center justify-center md:w-3/5 py-12">
                
                    <div className="flex items-center justify-center relative w-full mx-auto h-[30rem] sm:h-[40rem] md:h-[40rem] lg:h-[50rem]">
                     
                        <img src="hobby/seattle.jpg" alt="" className="absolute inset-0 w-full h-full object-cover blur-md z-[-1]" />

                       
                        <div className="z-10 p-4 space-y-4 md:space-y-0 md:space-x-6 md:flex md:flex-row md:items-center md:justify-center">
                            <div className="flex justify-center items-center w-full md:w-auto">
                                <img src="me/hobby-2.png" alt="" className="h-auto w-1/3 md:w-48 lg:w-64 rounded-full border-2 border-white" />
                            </div>

                            <div className="bg-slate-100/25 p-6 border-hidden rounded-lg border-2 text-center md:text-left max-w-xs sm:max-w-sm md:max-w-md lg:max-w-md xl:max-w-lg mx-auto">
                                <h1 className='text-black text-xl sm:text-2xl md:text-3xl lg:text-4xl italic'> A little more about me: </h1> <br />
                                <h3 className="text-black text-sm sm:text-md md:text-lg lg:text-xl">
                                    I'm a 2nd gen Korean-American born and raised in Oklahoma. <br /><br />
                                    Some of my favorite hobbies include: golf, photography, cooking for friends, and reading when I have down time. Currently reading "yolk" by Mary HK Choi.
                                </h3>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </>
    )  
}

================
File: src/pages/App/App.css
================
.App {
  text-align: center;
}

.App-header {
  background-color: #282c34;
  /* min-height: 100vh; */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

================
File: src/pages/App/App.jsx
================
import './App.css';
import Navbar from "../../components/Navbar/Navbar"
import ProjectsPage from '../ProjectsPage/ProjectsPage';
import AboutPage from '../AboutPage/AboutPage';
import ContactPage from '../ContactPage/ContactPage';
import SweeperProjectPage from '../SweeperProjectPage/SweeperProjectPage';
import CardioProjectPage from '../CardioProjectPage/CardioProjectPage';
import TheDraftProjectPage from '../TheDraftProjectPage/TheDraftProjectPage';
import LowkeyProjectPage from '../LowkeyProjectPage/LowkeyProjectPage';
import HomePage from '../HomePage/HomePage';
import NotFoundPage from '../NotFoundPage/NotFoundPage';
import Footer from '../../components/Footer/Footer';
import { Analytics } from '@vercel/analytics/react';
import React, { useState } from 'react';
import ScrollToTop from '../../utilities/ScrollToTop';
import LunchbreakProjectPage from '../LunchbreakProjectPage/LunchbreakProjectPage';
import BrewistaProjectPage from '../BrewistaProjectPage/BrewistaProjectPage';
import { NavigationProvider } from '../../context/NavigationContext';
import Navigation from '../../components/Navigation/Navigation';
import { Routes, Route } from 'react-router-dom';

function App() {

  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  return (
    <NavigationProvider>
      <main className="App relative">
        <ScrollToTop />
        {/* <Navbar isMobileMenuOpen={isMobileMenuOpen} setIsMobileMenuOpen={setIsMobileMenuOpen} />  */}
        <Navigation />
        <Routes>
            <Route path='/' element={<HomePage isMobileMenuOpen={isMobileMenuOpen} />} />
            <Route path='/projects' element={<ProjectsPage isMobileMenuOpen={isMobileMenuOpen}/>} />
            <Route path='/projects/sweeper' element={<SweeperProjectPage isMobileMenuOpen={isMobileMenuOpen}/>} />
            <Route path='/projects/cardio' element={<CardioProjectPage isMobileMenuOpen={isMobileMenuOpen}/>} />
            <Route path='/projects/thedraft' element={<TheDraftProjectPage isMobileMenuOpen={isMobileMenuOpen}/>} />
            <Route path='/projects/lowkey' element={<LowkeyProjectPage isMobileMenuOpen={isMobileMenuOpen}/>} />
            <Route path='/projects/lunchbreak' element={<LunchbreakProjectPage isMobileMenuOpen={isMobileMenuOpen}/>} />
            <Route path='/projects/brewista' element={<BrewistaProjectPage isMobileMenuOpen={isMobileMenuOpen}/>} />
            <Route path='/about' element={<AboutPage isMobileMenuOpen={isMobileMenuOpen}/>} />
            <Route path='/contact' element={<ContactPage />} />
            <Route path='*' element={<NotFoundPage />} />
        </Routes>
        <Footer /> 
        <Analytics /> 
      </main>
    </NavigationProvider>
  );
}

export default App;

================
File: src/pages/BrewistaProjectPage/BrewistaProjectPage.jsx
================
import React from 'react'

export default function BrewistaProjectPage({isMobileMenuOpen}) {
    const paddingTopClass = isMobileMenuOpen ? 'pt-60' : 'pt-24';
    return (
        <div className={`${isMobileMenuOpen}`}>BrewistaProjectPage</div>
    )
}

================
File: src/pages/CardioProjectPage/CardioProjectPage.jsx
================
export default function Example({isMobileMenuOpen}) {

  const paddingTopClass = isMobileMenuOpen ? 'pt-60' : 'pt-24';

  return (
    <div className={`relative isolate overflow-hidden bg-gray-300 px-6 ${paddingTopClass} pb-24 sm:pb-32 sm:pt-32 lg:overflow-visible lg:px-0`}>
      <div className="absolute inset-0 -z-10 overflow-hidden">
        <svg
          className="absolute left-[max(50%,25rem)] top-0 h-[64rem] w-[128rem] -translate-x-1/2 stroke-gray-200 [mask-image:radial-gradient(64rem_64rem_at_top,white,transparent)]"
          aria-hidden="true"
        >
          <defs>
            <pattern
              id="e813992c-7d03-4cc4-a2bd-151760b470a0"
              width={200}
              height={200}
              x="50%"
              y={-1}
              patternUnits="userSpaceOnUse"
            >
              <path d="M100 200V.5M.5 .5H200" fill="none" />
            </pattern>
          </defs>
          <svg x="50%" y={-1} className="overflow-visible fill-gray-50">
            <path
              d="M-100.5 0h201v201h-201Z M699.5 0h201v201h-201Z M499.5 400h201v201h-201Z M-300.5 600h201v201h-201Z"
              strokeWidth={0}
            />
          </svg>
          <rect width="100%" height="100%" strokeWidth={0} fill="url(#e813992c-7d03-4cc4-a2bd-151760b470a0)" />
        </svg>
      </div>
      <div className="mx-auto grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 lg:mx-0 lg:max-w-none lg:grid-cols-2 lg:items-start lg:gap-y-10">
        <div className="lg:col-span-2 lg:col-start-1 lg:row-start-1 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
          <div className="lg:pr-4">
            <div className="lg:max-w-lg">
              <h1 className="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">cardIO</h1>
              <a href="https://github.com/benjaehyun/cardIO" target="_blank" rel="noopener noreferrer" className='underline'>Link To GitHub</a> || &nbsp;
              <a href="https://cardio-c535cdf1802c.herokuapp.com/" target="_blank" rel="noopener noreferrer" className='underline'>Link To App</a>
              <p className='mt-6 text-sm text-gray-700 '> Note: Live app is under construction, but please check out the Github for more information about this project! </p>
              <p className="mt-6 text-xl leading-8 text-gray-700 text-justify">
              cardIO is a powerful educational resource designed to draw on high-yield learning from spaced repetition during long study sessions. 
              This app was developed with a focus on efficiency, effectiveness, and user-friendliness, drawing inspiration from popular platforms like Anki and Quizlet.
              </p>
            </div>
          </div>
        </div>
        <div className="-ml-12 -mt-12 p-12 lg:sticky lg:top-4 lg:col-start-2 lg:row-span-2 lg:row-start-1 lg:overflow-hidden">
          <img
            className="w-[48rem] max-w-none rounded-xl bg-gray-900 shadow-xl ring-1 ring-gray-400/10 sm:w-[57rem]"
            src="/cardio/cardio-1.png"
            alt=""
          />
        </div>
        <div className="lg:col-span-2 lg:col-start-1 lg:row-start-2 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
          <div className="lg:pr-4">
            <div className="max-w-xl text-base leading-7 text-gray-700 lg:max-w-lg">
            <h1 className='font-bold text-xl'>Description:  </h1><br /> 
              <p className='text-justify'>
                In cardIO, users are able to create/login to an account using their Google account (implemented using Passport.js authentication middleware which handled Google's Oauth procedure). 
                Users can then create their own decks of flashcards and go through each card until they are finished with the deck. They are also able to view all 
                of the decks created on the platform and see collections of decks different users have made as well. Also, users are encouraged to have discussions on various topics 
                with comments and message boards residing on both decks and individual cards.
              </p>
              <br />
              <h1 className='font-bold text-xl'>Notes: </h1>
              <p className="mt-8 text-justify">
                Developing most portions of this app was fairly straightforward, using the Express framework with newly learned RESTful Routing practices. The main difficulty with developing this app 
                came from the constraints associated with using Embedded JavaScript Templates as the front-end. While many aspects of the app could be normally done by routing and rendering some data that is returned
                by the server, flipping the cards was significantly more involved than expected. Slightly deviating from the conventions of EJS usage, I implemented a script that uses DOM manipulation to handle the flip 
                trigger and display the fronts and backs of the card. 
              </p>
              <h2 className="mt-16 text-xl font-bold tracking-tight text-gray-900">Technologies Used: </h2>
              <p className="mt-6">
                JavaScript, HTML, CSS, Passport.js, Node.js, Express.js, MongoDB, and Mongoose
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

================
File: src/pages/ContactPage/ContactPage.jsx
================
import React from 'react'
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faLinkedin, faGithub } from "@fortawesome/free-brands-svg-icons";
import { faEnvelope } from "@fortawesome/free-solid-svg-icons";

export default function ContactPage() {


    return (
        <div className="min-h-screen flex flex-col items-center justify-center bg-gray-900 px-4 py-8">
            <div className="max-w-md md:max-w-lg lg:max-w-xl xl:max-w-2xl bg-gray-800 p-6 rounded-lg shadow-lg text-center">
                <h1 className="text-3xl md:text-4xl font-semibold text-white mb-6">
                    Let's Connect!
                </h1>
                <p className="text-md md:text-lg text-gray-300 mb-6">
                    Interested in discussing new opportunities, projects, or just a chat about tech? Reach out to me!
                </p>
                <div className="flex justify-center space-x-4 md:space-x-6">
                    <a href="https://github.com/benjaehyun" target="_blank" rel="noopener noreferrer" className='text-2xl md:text-3xl text-gray-400 hover:text-white'>
                        <FontAwesomeIcon icon={faGithub} />
                    </a>
                    <a href="https://www.linkedin.com/in/benjaehyun/" target="_blank" rel="noopener noreferrer" className='text-2xl md:text-3xl text-gray-400 hover:text-white'>
                        <FontAwesomeIcon icon={faLinkedin} />
                    </a>
                    <a href="mailto:benjaminjaelee@gmail.com" className="text-2xl md:text-3xl text-gray-400 hover:text-white">
                        <FontAwesomeIcon icon={faEnvelope} />
                    </a>
                </div>
            </div>
        </div>
    )
}

================
File: src/pages/HomePage/HomePage.jsx
================
import React from 'react';
import { Link } from 'react-router-dom';
import { ArrowRight, Github, ExternalLink } from 'lucide-react';
import ProjectPreview from '../../components/ProjectPreview/ProjectPreview';
import OptimizedBackground from '../../utilities/OptimizedBackground';

export default function HomePage() {

  const featuredProjects = [
    {
      title: "LunchBreak",
      description: "LunchBreak is a comprehensive web application designed to simplify corporate dining experiences. By seamlessly connecting employees and companies with a wide array of restaurant options, the platform facilitates meal ordering, budget management, and menu customization.",
      technologies: ["React", "Django", "PostgreSQL", "Django REST Framework", "JWT", "Tailwind CSS"],
      images: ["lunchbreak/lunchbreak-1.png", "lunchbreak/lunchbreak-2.png"],
      githubUrl: null,
      liveUrl: null,
      projectLink: "lunchbreak",
      status: "ongoing",
      keyFeatures: [
        "Dynamic Restaurant Menus",
        "Budget and Expense Tracking",
        "Advanced Menu Customization",
        "Responsive Design"
      ]
    },
    {
      title: "lowKEY",
      description: "A MERN-Stack dating app where users can connect their Spotify account to view other users who have similar tastes in music. With the Spotify API, song metrics are used to sort users based on similarity.",
      technologies: ["React", "Node.js", "Express", "MongoDB", "Socket.io", "Spotify API", "AWS S3"],
      images: ["lowkey/lowkey-mac-1.png", "lowkey/lowkey-mac-2.png"],
      githubUrl: "https://github.com/benjaehyun/lowKEY",
      liveUrl: "https://lowkey-08ba0f67b0aa.herokuapp.com/",
      projectLink: "lowkey",
      status: "completed",
      keyFeatures: [
        "Spotify Integration",
        "Real-time Chat",
        "Music Taste Matching Algorithm",
        "Interactive User Profiles"
      ]
    },
    {
      title: "The Draft",
      description: "A Django forum app created in collaboration with developers Nadew Demissew and Jon Do. The Draft is a discussion forum inspired by websites such as 'CollegeConfidential', with its focus shifted toward navigating the complex and challenging world of job hunting.",
      technologies: ["Django", "Python", "PostgreSQL", "AWS S3", "Bootstrap", "PDF.js"],
      images: ["thedraft/thedraft-mac-1.png", "thedraft/thedraft-mac-2.png"],
      githubUrl: "https://github.com/benjaehyun/thedraft",
      liveUrl: "https://thedraft-theebuggers-823b566ea1e8.herokuapp.com/",
      projectLink: "thedraft",
      status: "completed",
      keyFeatures: [
        "Job Application Tracker",
        "Discussion Forums",
        "PDF Resume Viewer",
        "Company-specific Subforums"
      ]
    }
  ];

  const ongoingProjects = [
    {
      title: "LunchBreak",
      description: "LunchBreak is a comprehensive web application designed to simplify corporate dining experiences. By seamlessly connecting employees and companies with a wide array of restaurant options, the platform facilitates meal ordering, budget management, and menu customization.",
      technologies: ["React", "Django", "PostgreSQL", "Django REST Framework", "JWT", "Tailwind CSS"],
      images: ["lunchbreak/lunchbreak-1.png", "lunchbreak/lunchbreak-2.png"],
      githubUrl: "https://github.com/your-username/lunchbreak", // Add when available
      liveUrl: null, // Add when available
      projectLink: "lunchbreak",
      status: "ongoing",
      keyFeatures: [
        "Dynamic Restaurant Menus",
        "Budget and Expense Tracking",
        "Advanced Menu Customization",
        "Responsive Design"
      ]
    },
    {
      title: "Brewista",
      description: "Brewista is designed to be a comprehensive digital companion for coffee enthusiasts. Its primary goal is to enhance the coffee brewing experience by allowing users to track, create, and share their coffee brewing recipes.",
      technologies: ["React", "Node.js", "Express", "MongoDB", "Tailwind CSS"],
      images: ["brewista/brewista-1.png", "brewista/brewista-2.png"],
      githubUrl: "https://github.com/your-username/brewista", // Add when available
      liveUrl: null, // Add when available
      projectLink: "brewista",
      status: "ongoing",
      keyFeatures: [
        "Recipe Creation and Sharing",
        "Brewing Method Guides",
        "Coffee Bean Database",
        "Community Features"
      ]
    }
  ];

  const CurrentWorkSection = () => {
    const currentProject = ongoingProjects[0];
    const nextProject = ongoingProjects[1];

    return (
      <div>
        <div className="flex items-center mb-8">
          <h2 className="text-3xl font-bold text-white">What I'm Working On</h2>
        </div>
        <div className="grid md:grid-cols-2 gap-8">
          {/* Current Project Card */}
          <div className="bg-gray-800/50 rounded-xl p-8">
            <div className="flex items-center justify-between mb-4">
              <h3 className="text-xl font-semibold text-white">Current Project</h3>
              <div className="flex space-x-2">
                {currentProject.githubUrl && (
                  <a
                    href={currentProject.githubUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="p-2 bg-gray-700/50 rounded-lg hover:bg-gray-700 transition-colors"
                  >
                    <Github className="w-5 h-5 text-gray-300" />
                  </a>
                )}
                {currentProject.liveUrl && (
                  <a
                    href={currentProject.liveUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="p-2 bg-gray-700/50 rounded-lg hover:bg-gray-700 transition-colors"
                  >
                    <ExternalLink className="w-5 h-5 text-gray-300" />
                  </a>
                )}
              </div>
            </div>
            <Link to={`/projects/${currentProject.linkSuffix}`} className="block group">
              <h4 className="text-lg font-medium text-white mb-2 group-hover:text-blue-400 transition-colors">
                {currentProject.title}
              </h4>
              <p className="text-gray-300 mb-4 line-clamp-3">{currentProject.description}</p>
              <div className="flex flex-wrap gap-2">
                {currentProject.technologies.map((tech, index) => (
                  <span key={index} className="px-3 py-1 bg-blue-500/20 text-blue-300 rounded-full text-sm">
                    {tech}
                  </span>
                ))}
              </div>
            </Link>
          </div>

          {/* Up Next Card */}
          <div className="bg-gray-800/50 rounded-xl p-8">
            <div className="flex items-center justify-between mb-4">
              <h3 className="text-xl font-semibold text-white">Up Next</h3>
              <div className="flex space-x-2">
                {nextProject.githubUrl && (
                  <a
                    href={nextProject.githubUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="p-2 bg-gray-700/50 rounded-lg hover:bg-gray-700 transition-colors"
                  >
                    <Github className="w-5 h-5 text-gray-300" />
                  </a>
                )}
              </div>
            </div>
            <Link to={`/projects/${nextProject.linkSuffix}`} className="block group">
              <h4 className="text-lg font-medium text-white mb-2 group-hover:text-blue-400 transition-colors">
                {nextProject.title}
              </h4>
              <p className="text-gray-300 mb-4 line-clamp-3">{nextProject.description}</p>
              <div className="flex flex-wrap gap-2">
                {nextProject.technologies.map((tech, index) => (
                  <span key={index} className="px-3 py-1 bg-green-500/20 text-green-300 rounded-full text-sm">
                    {tech}
                  </span>
                ))}
              </div>
            </Link>
          </div>
        </div>
      </div>
    );
  };

  return (
    <div className="min-h-screen pt-24">
      {/* Background Image */}
      <OptimizedBackground 
        imagePath="hobby/chicago-street.jpg"
        className="h-[90vh] md:h-[80vh] lg:h-[90vh] bg-cover bg-center absolute w-full z-[-1] blur-sm top-0 left-0"
        asBackground={true}
      />
      
      {/* Hero Section */}
      <div className="flex flex-col md:flex-row justify-center items-center h-[80vh] px-4">
        <img 
          src="me/griffith-portrait.jpg" 
          alt="Ben Lee" 
          className="w-32 md:w-[20vw] rounded-full border-2 border-white"
          loading="eager"
        />
        <div className="w-4/5 md:w-[30vw] mt-4 md:mt-0 md:ml-16 p-4">
          <h1 className="text-white text-2xl md:text-4xl lg:text-5xl">Hi there 👋, I'm Ben!</h1>
          <p className="text-white text-lg md:text-xl lg:text-2xl mt-4">
            I'm a full-stack developer with a STEM background and entrepreneurial experience.<br />
            I'm currently located in Seattle, WA.
          </p>
        </div>
      </div>

      {/* Content Sections */}
      <div className="bg-gray-900">
        {/* Current Work Section */}
        <section className="container mx-auto px-4 py-20">
          <CurrentWorkSection />
        </section>

        {/* Featured Projects Section */}
        <section className="container mx-auto px-4 py-20">
          <div className="flex items-center justify-between mb-8">
            <h2 className="text-3xl font-bold text-white">Featured Projects</h2>
            <Link 
              to="/projects"
              className="flex items-center space-x-2 px-4 py-2 text-blue-400 hover:text-blue-300 transition-colors rounded-lg hover:bg-gray-800/50"
            >
              <span className="text-lg">View all projects</span>
              <ArrowRight className="w-5 h-5" />
            </Link>
          </div>
          <div className="space-y-16">
            {featuredProjects.map(project => (
              <ProjectPreview
                key={project.title}
                {...project}
              />
            ))}
          </div>
        </section>
      </div>
    </div>
  );
}

================
File: src/pages/LowkeyProjectPage/LowkeyProjectPage.jsx
================
export default function Example({isMobileMenuOpen}) {

  const paddingTopClass = isMobileMenuOpen ? 'pt-60' : 'pt-24';

  return (
    <div className={`relative isolate overflow-hidden bg-gray-300 px-6 ${paddingTopClass} pb-24 sm:pb-32 sm:pt-32 lg:overflow-visible lg:px-0`}>
      <div className="absolute inset-0 -z-10 overflow-hidden">
        <svg
          className="absolute left-[max(50%,25rem)] top-0 h-[64rem] w-[128rem] -translate-x-1/2 stroke-gray-200 [mask-image:radial-gradient(64rem_64rem_at_top,white,transparent)]"
          aria-hidden="true"
        >
          <defs>
            <pattern
              id="e813992c-7d03-4cc4-a2bd-151760b470a0"
              width={200}
              height={200}
              x="50%"
              y={-1}
              patternUnits="userSpaceOnUse"
            >
              <path d="M100 200V.5M.5 .5H200" fill="none" />
            </pattern>
          </defs>
          <svg x="50%" y={-1} className="overflow-visible fill-gray-50">
            <path
              d="M-100.5 0h201v201h-201Z M699.5 0h201v201h-201Z M499.5 400h201v201h-201Z M-300.5 600h201v201h-201Z"
              strokeWidth={0}
            />
          </svg>
          <rect width="100%" height="100%" strokeWidth={0} fill="url(#e813992c-7d03-4cc4-a2bd-151760b470a0)" />
        </svg>
      </div>
      <div className="mx-auto grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 lg:mx-0 lg:max-w-none lg:grid-cols-2 lg:items-start lg:gap-y-10">
        <div className="lg:col-span-2 lg:col-start-1 lg:row-start-1 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
          <div className="lg:pr-4">
            <div className="lg:max-w-lg">
              <h1 className="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">lowKEY</h1> <br />
              <a href="https://github.com/benjaehyun/lowKEY" target="_blank" rel="noopener noreferrer" className='underline'>Link To GitHub</a> || &nbsp;
              <a href="https://lowkey-08ba0f67b0aa.herokuapp.com/" target="_blank" rel="noopener noreferrer" className='underline'>Link To App</a>
              <p className='mt-6 text-sm text-gray-700 text-justify'> Note: In order to demo the app, please contact me. Due to the nature of Spotify's Developer API, I need to manually whitelist your Spotify Account in my app's permissions</p>
              <p className="mt-6 text-xl text-justify leading-8 text-gray-700">
              LowKEY is a MERN-stack application that leverages the power of the Spotify API to match users based on their musical preferences. 
              Whether you're looking for new friends or potential soulmates who share your taste in music, this app is designed to help you connect with like-minded music enthusiasts. 
              </p>
            </div>
          </div>
        </div>
        <div className="-ml-12 -mt-12 p-12 lg:sticky lg:top-4 lg:col-start-2 lg:row-span-2 lg:row-start-1 lg:overflow-hidden">
          <img
            className="w-[48rem] max-w-none rounded-t-xl bg-gray-900 shadow-xl ring-1 ring-gray-400/10 sm:w-[57rem]"
            src="/lowkey/lowkey-projectpg-mac.png"
            alt=""
          />
          <img
            className="w-[48rem] max-w-none rounded-b-xl bg-gray-900 shadow-xl ring-1 ring-gray-400/10 sm:w-[57rem]"
            src="/lowkey/lowkey-projectpg-mac-1.png"
            alt=""
          />
        </div>
        <div className="lg:col-span-2 lg:col-start-1 lg:row-start-2 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
          <div className="lg:pr-4">
            <div className="max-w-xl text-base leading-7 text-gray-700 lg:max-w-lg">
            <h1 className='font-bold text-xl'>Description:  </h1><br /> 
              <p className='text-justify'>
                When they are prompted during the profile creations process, users are able to select either: their top 20 songs from the past 6 months or a playlist from their library. 
                Using Spotify's API, song feature data can be fetched and stored. Using an algorithm that measures similarity metrics across features (such as energy, instrumentalness, valence, etc.), the 
                profiles displayed to the user will be sorted based on that similarity score. <br /> <br />
                Once users are matched (they both send a "like" to each other), they can communicate via private messages
                implemented using Socket.io, which are persisted in MongoDB for future sessions. Additionally, similarity data is displayed on the match page for each matched pair, showing 
                what metrics the two users scored highly on. Other data shwon on the match page about each pair includes: songs, albums, or artists that the users may share. 
              </p>
              <br />
              <h1 className='font-bold text-xl'>Notes: </h1>
              <p className="mt-8 text-justify">
                The most difficult part of starting this app was implementing Spotify's Authorization Flow with PKCE in a system using JWTs to manage user authorization in this application. Once this was resolved, the next challenge was also the most exciting: the algorithm for similarity metrics across users' songs. After extensive research, I ended up sorting the various song feature data 
                and using a simple euclidean distance formula. From what I was able to learn, it was the best way to reflect data characteristics such as range, frequency, and others, on the overall similarity score.
                I also considered other similarity meterics such as cosine similarity; however, these methods didn't seem to fit the data that was being returned by Spotify because things like the direction of data vectors matter less when the 
                values are all within a given range. 
                <br /> 
                <br /> 
                Aside from the actual algorithm design, another challenge was normalizing the values so that no single metric would have an overwhelming impact on the similarity score. Things like instrumentalness 
                might yield incredibly small values when similarity calculations are being made, as compared to something like energy (Also worth noting that while the values themselves were very small, they also had a tendency to have an extremely high variance. So it's 
                difficult to just multiply the metrics by some constant factor). Additionally, there were also some complications with implementing Socket.io to use websockets for live chat functionality, which were then stored in the database and used to update React states. 
                But these were later resolved by refactoring the React state management pattern and adjusting the Socket.io configuration.   
              </p>
              <h2 className="mt-16 text-xl font-bold tracking-tight text-gray-900">Technologies Used: </h2>
              <p className="mt-6">
                JavaScript, HTML, CSS, Node.js, Express.js, MongoDB, Mongoose, React, Socket.io, Bootstrap, Spotify API, AWS S3, Chart.js
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

================
File: src/pages/LunchbreakProjectPage/LunchbreakProjectPage.jsx
================
import React from 'react'
import TextSectionComponent from '../../components/LunchbreakComponents/TextSectionComponent'
import TableofContents from '../../components/LunchbreakComponents/TableofContents'; 
import BackgroundComponent from '../../components/LunchbreakComponents/BackgroundComponent';
import OverviewAndGoalsComponent from '../../components/LunchbreakComponents/OverviewAndGoalsComponent';
import TechnologiesComponent from '../../components/LunchbreakComponents/TechnologiesComponent';
import FigmaEmbed from '../../components/LunchbreakComponents/FigmaEmbed';
import ProjectTimeline from '../../components/LunchbreakComponents/ProjectTimeline';

export default function LunchbreakProjectPage({isMobileMenuOpen}) {
    const paddingTopClass = isMobileMenuOpen ? 'pt-60' : 'pt-4';    
    return (
        <>
            <div className={`${paddingTopClass} text-white text-3xl pb-12`}>Lunchbreak</div>
            <TableofContents /> 
            <div id="overview">
                <OverviewAndGoalsComponent />
            </div>
            <div id="technologies">
                <TechnologiesComponent />
            </div>
            <div id="background">
                <BackgroundComponent />
            </div>
            <div id="timeline">
                <ProjectTimeline />
            </div>
            <section className="py-12 px-4">
                <h2 className="text-3xl text-white font-bold text-center mb-8">Design Prototype</h2>
                <FigmaEmbed />
            </section>

        </>
        
    )
}

================
File: src/pages/NotFoundPage/NotFoundPage.jsx
================
import React from 'react'
import { Link } from 'react-router-dom';

export default function NotFoundPage() {
  return (
    <div className="flex flex-col text-white items-center justify-center h-screen ">
        <h1 className="text-4xl font-bold">404 - Page Not Found</h1>
        <p className="mt-4">Sorry, the page you are looking for does not exist.</p>
        <Link to="/" className="mt-6 text-blue-600 hover:underline">
        Go back to the homepage
        </Link>
  </div>
  )
}

================
File: src/pages/ProjectsPage/ProjectsPage.jsx
================
import ProjectsList from "../../components/ProjectsList/ProjectsList"
import OngoingProjectsCard from "../../components/OngoingProjectsCard/OngoingProjectsCard";


export default function ProjectsPage ({isMobileMenuOpen}) {

    const projects = [
        {
            title: "lowKEY",
            description: "A MERN-Stack dating app. Full-Stack application where users can connect their Spotify account to view other users who have similar tastes in music. With the Spotify API, song metrics are used to sort users based on similarity. Once matched, users can chat privately and view what musical features they have in common.",
            images: ["lowkey/lowkey-mac-1.png", "lowkey/lowkey-mac-2.png"],
            linkSuffix: "lowkey"
        },
        {
            title: "The Draft",
            description: "A Django forum app. Full-Stack application created in collaboration with developers Nadew Demissew and Jon Do. The Draft is a discussion forum inspired by websites such as 'CollegeConfidential', with its focus shifted toward navigating the complex and challenging world of job hunting. This app also features a job application tracker which helps users track a particular application cycle.",
            images: ["thedraft/thedraft-mac-1.png", "thedraft/thedraft-mac-2.png"],
            linkSuffix: "thedraft"
        },
        {
            title: "cardIO",
            description: "A MEN-Stack flashcard app. My first Full-Stack application: CardIO. This project was developed as an educational resource to draw on high-yield learning from spaced repetition of flashcards. The idea for this app comes from my past experiences of using other flashcard apps such as Quizlet and Anki back as a pre-med student.",
            images: ["cardio/cardio-1.png", "cardio/cardio-2.png"],
            linkSuffix: "cardio"
        },
        {
            title: "sweeper",
            description: "A browser game made using JavaScript, HTML, and CSS. Based on the popular game Minesweeper, sweeper was my first dive into development, while using a nostalgic pastime as reference. My first coding endeavor utilizes basic game logic, DOM manipulation for graphic rendering, and a recursive implementation for the cell reveal function.",
            images: [
                "sweeper/sweeper-mac-1.png", "sweeper/sweeper-mac-2.png", 
            // "sweeper/sweeper-3.png", "sweeper/sweeper-4.png"
        ],
            linkSuffix: "sweeper"
        },
    ];

    const ongoingProjects = [
        {
            title: "LunchBreak", 
            description: "LunchBreak is a comprehensive web application designed to simplify corporate dining experiences. By seamlessly connecting employees and companies with a wide array of restaurant options, the platform facilitates meal ordering, budget management, and menu customization. Developed with a keen focus on user experience and operational efficiency, LunchBreak utilizes a robust tech stack comprising Django and React, alongside Django REST Framework for dynamic API interactions and Simple JWT for secure authentication.", 
            link: "/projects/lunchbreak"
        }, 
        {
            title: "Brewista", 
            description: "Brewista is designed to be a comprehensive digital companion for coffee enthusiasts. Its primary goal is to enhance the coffee brewing experience by allowing users to track, create, and share their coffee brewing recipes. Whether users are experimenting with different brewing methods, trying out new coffee beans, or perfecting their pour-over technique, Brewista provides a platform to document every step of the journey. Users can journal their experiences, note variations in flavor, and share insights with a community of like-minded individuals.", 
            link: "/projects/brewista"
        }        
    ]
    
    const paddingTopClass = isMobileMenuOpen ? 'pt-[25vh]' : 'pt-[10vh]';

    return (
        <>
            <div 
            style={{
                backgroundImage: 'url("hobby/ny.jpg")', 
                backgroundSize: "cover",
                backgroundPosition: "center"
            }}
            className='h-[90vh] md:h-[80vh] lg:h-[90vh] bg-cover bg-center absolute w-full z-[-1] blur-md top-0 left-0'
            >
            </div>
            <div className={`flex flex-col md:flex-row justify-center items-center ${paddingTopClass} md:pt-[22vh] relative `}>
                    <div className="w-4/5 md:w-[30vw] mt-4 md:mt-0 md:ml-16 p-4">
                        <h1 className='text-white text-4xl md:text-4xl'>Thanks for taking an interest in some of my projects!</h1> <br />
                        <h3 className="text-white text-2xl md:text-xl ">Take a look at what I've been up to recently ⬇️</h3>
                    </div>
                </div>
            <h1 className="text-4xl text-center font-bold font-mono text-white mt-[40vh] md:mt-[35vh] lg:mt-[40vh] mb-8">Ongoing Projects</h1>
            {ongoingProjects.map((project, index) => (
                <OngoingProjectsCard 
                key={index}
                title={project.title}
                description={project.description}
                link={project.link}
                />
                ))}
            <h1 className="text-4xl text-center font-bold font-mono text-white mt-[20vh] md:mt-[17.5vh] lg:mt-[20vh] ">Past Projects</h1>
            <ProjectsList projects={projects} />
        </>
    )    
}

================
File: src/pages/SweeperProjectPage/SweeperProjectPage.jsx
================
export default function SweeperProjectPage({isMobileMenuOpen}) {

  const paddingTopClass = isMobileMenuOpen ? 'pt-60' : 'pt-24';

  return (
    <div className={`relative isolate overflow-hidden bg-gray-300 px-6 ${paddingTopClass} pb-24 sm:pb-32 sm:pt-32 lg:overflow-visible lg:px-0`}>
      <div className="absolute inset-0 -z-10 overflow-hidden">
        <svg
          className="absolute left-[max(50%,25rem)] top-0 h-[64rem] w-[128rem] -translate-x-1/2 stroke-gray-200 [mask-image:radial-gradient(64rem_64rem_at_top,white,transparent)]"
          aria-hidden="true"
        >
          <defs>
            <pattern
              id="e813992c-7d03-4cc4-a2bd-151760b470a0"
              width={200}
              height={200}
              x="50%"
              y={-1}
              patternUnits="userSpaceOnUse"
            >
              <path d="M100 200V.5M.5 .5H200" fill="none" />
            </pattern>
          </defs>
          <svg x="50%" y={-1} className="overflow-visible fill-gray-50">
            <path
              d="M-100.5 0h201v201h-201Z M699.5 0h201v201h-201Z M499.5 400h201v201h-201Z M-300.5 600h201v201h-201Z"
              strokeWidth={0}
            />
          </svg>
          <rect width="100%" height="100%" strokeWidth={0} fill="url(#e813992c-7d03-4cc4-a2bd-151760b470a0)" />
        </svg>
      </div>
      <div className="mx-auto grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 lg:mx-0 lg:max-w-none lg:grid-cols-2 lg:items-start lg:gap-y-10">
        <div className="lg:col-span-2 lg:col-start-1 lg:row-start-1 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
          <div className="lg:pr-4">
            <div className="lg:max-w-lg">
              <h1 className="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">sweeper</h1> <br />
              <a href="https://github.com/benjaehyun/sweeper" target="_blank" rel="noopener noreferrer" className='underline'>Link To GitHub</a> || &nbsp;
              <a href="https://benjaehyun.github.io/sweeper/" target="_blank" rel="noopener noreferrer" className='underline'>Link To App</a>
              <p className="mt-6 text-xl leading-8 text-gray-700 text-justify">
              Based on the popular game Minesweeper, sweeper is a logic puzzle game which features a grid of clickable squares with hidden
               bombs scattered through the board. The goal of the game is to clear the entire board without setting off any of the bombs.
              </p>
            </div>
          </div>
        </div>
        <div className="-ml-12 -mt-12 p-12 lg:sticky lg:top-4 lg:col-start-2 lg:row-span-2 lg:row-start-1 lg:overflow-hidden">
          <img
            className="w-[48rem] max-w-none rounded-t-xl bg-gray-900 shadow-xl ring-1 ring-gray-400/10 sm:w-[57rem]"
            src="/sweeper/sweeper-mac-1.png"
            alt=""
          />
          <img
            className="w-[48rem] max-w-none rounded-b-xl bg-gray-900 shadow-xl ring-1 ring-gray-400/10 sm:w-[57rem]"
            src="/sweeper/sweeper-mac-2.png"
            alt=""
          />
        </div>
        <div className="lg:col-span-2 lg:col-start-1 lg:row-start-2 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
          <div className="lg:pr-4">
            <div className="max-w-xl text-base leading-7 text-gray-700 lg:max-w-lg">
            <h1 className='font-bold text-xl'>Description:  </h1><br /> 
              <p className='text-justify'>
                    A browser contained game created using only JavaScript, HTML, and CSS. Sweeper was my first dive into 
                    developing using a nostalgic pastime as reference. This project utilizes basic game logic to check for win/lose condition ie. if a bomb containing cell was clicked or if 
                    all non-bomb containing cells have been revealed. 
                    <br /> 
                    <br /> 
                    The game uses DOM manipulation for graphic rendering and on-click controls. Once a user selects a difficulty (initiating the game), the script 
                    programatically constructs the back-end representation of the cells which are 2-D arrays and implements a class-based approach in the construction. 
                    <br /> 
                    <br /> 
                    The final and honestly most difficult portion 
                    of this project was the function handling the initial reveal, in which the user clicks a completely blank board and a solvable pattern of cells are uncovered with their corresponding values.
                    The function was ultimately designed in such a way that the bombs were placed in cells that did not match the exact cell that the user first clicked (so that the user could not lose on the first turn).
                    Then a recursive reveal function was called designed after a flood-fill algorithm. 
              </p>
                <br /> 
              <h1 className='font-bold text-xl'>Notes: </h1>
              <p className="mt-8 text-justify">
                As mentioned above, the most difficult portion of this project was getting the correct behavior of the initial reveal function such that the user will always be displayed a solvable pattern. 
                I spent a handful of days implementing different versions of the function looking for the right pattern, as compared to the few days that it took to build out the rest of the app out of the 1 week sprint for the whole project.
                Following the guidance of online resources, I tried to implement a version of a flood-fill algorithm that would be able to fill a space when given defined edges (in this case, the edges were 
                number containing cells). I kept getting "cliffs" where the revealed portion would go around corners of numbers, leading to a board that has too many solved cells (that may not always be solvable). 
                I found that I was able to recursively call the reveal function on cells that have a value of "0". This meant that the pattern will always have number containing edges and was not over-solved. 
              </p>
              <h2 className="mt-16 text-2xl font-bold tracking-tight text-gray-900">Technologies Used: </h2>
              <p className="mt-6">
                JavaScript, HTML, CSS
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

================
File: src/pages/TheDraftProjectPage/TheDraftProjectPage.jsx
================
export default function Example({isMobileMenuOpen}) {

  const paddingTopClass = isMobileMenuOpen ? 'pt-60' : 'pt-24';

  return (
    <div className={`relative isolate overflow-hidden bg-gray-300 px-6 ${paddingTopClass} pb-24 sm:pb-32 sm:pt-32 lg:overflow-visible lg:px-0`}>
      <div className="absolute inset-0 -z-10 overflow-hidden">
        <svg
          className="absolute left-[max(50%,25rem)] top-0 h-[64rem] w-[128rem] -translate-x-1/2 stroke-gray-200 [mask-image:radial-gradient(64rem_64rem_at_top,white,transparent)]"
          aria-hidden="true"
        >
          <defs>
            <pattern
              id="e813992c-7d03-4cc4-a2bd-151760b470a0"
              width={200}
              height={200}
              x="50%"
              y={-1}
              patternUnits="userSpaceOnUse"
            >
              <path d="M100 200V.5M.5 .5H200" fill="none" />
            </pattern>
          </defs>
          <svg x="50%" y={-1} className="overflow-visible fill-gray-50">
            <path
              d="M-100.5 0h201v201h-201Z M699.5 0h201v201h-201Z M499.5 400h201v201h-201Z M-300.5 600h201v201h-201Z"
              strokeWidth={0}
            />
          </svg>
          <rect width="100%" height="100%" strokeWidth={0} fill="url(#e813992c-7d03-4cc4-a2bd-151760b470a0)" />
        </svg>
      </div>
      <div className="mx-auto grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 lg:mx-0 lg:max-w-none lg:grid-cols-2 lg:items-start lg:gap-y-10">
        <div className="lg:col-span-2 lg:col-start-1 lg:row-start-1 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
          <div className="lg:pr-4">
            <div className="lg:max-w-lg">
              <h1 className="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">The Draft</h1> <br />
              <a href="https://github.com/benjaehyun/thedraft" target="_blank" rel="noopener noreferrer" className='underline'>Link To GitHub</a> || &nbsp;
              <a href="https://thedraft-theebuggers-823b566ea1e8.herokuapp.com/" target="_blank" rel="noopener noreferrer" className='underline'>Link To App</a>
              <p className="mt-6 text-xl leading-8 text-gray-700 text-justify">
              The Draft, created in collaboration with developers Nadew Demissew and Jonathan Do, is a discussion forum connecting job-seekers and industry experts 
              together to share knowledge, experiences, and insights with one another. Drawing inspiration from the popular website CollegeConfidential.com,
               users generate discussion that helps everyone navigate the often complex and challenging world of job hunting. The app's other major component 
               is the job tracker feature that is tied to each user. 
              </p>
            </div>
          </div>
        </div>
        <div className="-ml-12 -mt-12 p-12 lg:sticky lg:top-4 lg:col-start-2 lg:row-span-2 lg:row-start-1 lg:overflow-hidden">
        <img
            className="w-[48rem] max-w-none rounded-t-xl bg-gray-900 shadow-xl ring-1 ring-gray-400/10 sm:w-[57rem]"
            src="/thedraft/thedraft-projectpg-mac.png"
            alt=""
          />
          <img
            className="w-[48rem] max-w-none rounded-b-xl bg-gray-900 shadow-xl ring-1 ring-gray-400/10 sm:w-[57rem]"
            src="/thedraft/thedraft-projectpg-mac-2.png"
            alt=""
          />
        </div>
        <div className="lg:col-span-2 lg:col-start-1 lg:row-start-2 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
          <div className="lg:pr-4">
            <div className="max-w-xl text-base leading-7 text-gray-700 lg:max-w-lg">
            <h1 className='font-bold text-xl'>Description:  </h1><br /> 
              <p className='text-justify'>
                The first major component to The Draft app is the subforums feature, which is how users submit topics, questions, or any other kind of interesting content for other users to engage with. Subforms fall into two catergories: General subforums and Company subforums. General subforums are how users can submit content for discussion that is regarding a general topic of conversation relating to job-seeking. Alternatively, Company subforums are how users submit content related to job-searching or interesting info regarding a specific company. Once on a given company's page, the user can then navigate all discussions related to that company.
                <br />
                <br />
                The second major component to The Draft App is it's job application tracker, which lives on the user's profile. The Job Application Tracker feature is designed to help users track a particular application cycle and provides a pdf viewer to show them what resume and/or cover letter was used, a status field that can be updated to reflect where they currently are in the cycle, and additional data like application components and notes to help the user provided extra context and action items as needed.
              </p>
                <br />
              <h1 className='font-bold text-xl'>Notes: </h1>
              <p className="mt-8 text-justify">
                The most apparent difficulty with this project was the time constraint. Even though it was developed in a 3-member team, implementing all of the app's functionalities within a 1 week sprint
                was extremely arduous. To add onto our sheer ambition with the app's capabilities, many of the app's functionality relied on technologies and implementations that we've never used before: AJAX calls, 
                handling both image and pdf file uploads with AWS S3, utilizing PDF.js to display the stored pdf files, using the bootstrap library for the first time, as well as several other aspects of the project. 
                Overall, I think that we were able to accomplish everything we had initially set out to with this project in a way that is useful and intuitive from a user experience perspective.  
              </p>
              <h2 className="mt-16 text-xl font-bold tracking-tight text-gray-900">Technologies Used: </h2>
              <p className="mt-6">
                Python, JavaScript, HTML, CSS, Django, Bootstrap, AWS, PDF.js, Heroku, Django Templating Language, PostgreSQL. 
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

================
File: src/utilities/OptimizedBackground.js
================
import React, { useState, useEffect } from 'react';

const OptimizedBackground = ({ 
  imagePath,
  className = '',
  children,
  asBackground = false
}) => {
  const [imageLoaded, setImageLoaded] = useState(false);
  const [currentSrc, setCurrentSrc] = useState('');
  const [error, setError] = useState(null);

  useEffect(() => {
    const loadAppropriateImage = () => {
      const width = window.innerWidth;
      
      // Extract the base path and filename
      const lastSlashIndex = imagePath.lastIndexOf('/');
      const basePath = imagePath.substring(0, lastSlashIndex);
      const filename = imagePath.substring(lastSlashIndex + 1, imagePath.lastIndexOf('.'));
      
      // Determine size suffix
      let size;
      if (width <= 640) {
        size = 'sm';
      } else if (width <= 1024) {
        size = 'md';
      } else {
        size = 'lg';
      }
      
      // Construct the path to the processed image
      const webpPath = `${basePath}/processed/${filename}-${size}.webp`;
      console.log('Attempting to load optimized image:', webpPath);
      return webpPath;
    };

    const loadImage = () => {
      const img = new Image();
      const optimizedSrc = loadAppropriateImage();
      
      img.onload = () => {
        console.log('Successfully loaded optimized image:', optimizedSrc);
        setCurrentSrc(optimizedSrc);
        setImageLoaded(true);
        setError(null);
      };
      
      img.onerror = (e) => {
        console.warn('Failed to load optimized image, falling back to original:', imagePath);
        const fallbackImg = new Image();
        
        fallbackImg.onload = () => {
          console.log('Successfully loaded fallback image');
          setCurrentSrc(imagePath);
          setImageLoaded(true);
          setError(null);
        };
        
        fallbackImg.onerror = () => {
          console.error('Both optimized and fallback images failed to load');
          setError('Failed to load image');
        };
        
        fallbackImg.src = imagePath;
      };
      
      img.src = optimizedSrc;
    };

    loadImage();

    const handleResize = () => {
      setImageLoaded(false);
      loadImage();
    };

    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, [imagePath]);

  // If used as a background element
  if (asBackground) {
    return (
      <div 
        style={{ backgroundImage: currentSrc ? `url("${currentSrc}")` : undefined }}
        className={`transition-opacity duration-500 ${className} ${
          imageLoaded ? 'opacity-100' : 'opacity-0'
        }`}
      >
        {/* Background placeholder */}
        <div 
          className={`absolute inset-0 bg-gray-900 transition-opacity duration-500 ${
            imageLoaded ? 'opacity-0' : 'opacity-100'
          }`} 
        />
        
        {error && (
          <div className="absolute inset-0 flex items-center justify-center text-red-500">
            {error}
          </div>
        )}
      </div>
    );
  }

  return (
    <div className="relative w-full">
      <div className="fixed inset-0 pointer-events-none z-[-1]">
        <div 
          className={`absolute inset-0 bg-gray-900 transition-opacity duration-500 ${
            imageLoaded ? 'opacity-0' : 'opacity-100'
          }`} 
        />
        
        {currentSrc && (
          <div
            style={{ backgroundImage: `url("${currentSrc}")` }}
            className={`absolute inset-0 transition-opacity duration-500 ${className} ${
              imageLoaded ? 'opacity-100' : 'opacity-0'
            }`}
          />
        )}
        
        {error && (
          <div className="absolute inset-0 flex items-center justify-center text-red-500">
            {error}
          </div>
        )}
      </div>
      
      <div className="relative">
        {children}
      </div>
    </div>
  );
};

export default OptimizedBackground;

================
File: src/utilities/ScrollToTop.js
================
import { useEffect } from "react";
import { useLocation } from "react-router-dom";

export default function ScrollToTop() {
  const { pathname } = useLocation();

  useEffect(() => {
    window.scrollTo(0, 0);
  }, [pathname]);

  return null;
}

================
File: src/index.css
================
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #282c34;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

================
File: src/index.js
================
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './pages/App/App';
import { BrowserRouter as Router } from 'react-router-dom';
// import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <Router> 
      <App />
    </Router>
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
// reportWebVitals();

================
File: src/reportWebVitals.js
================
const reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

================
File: src/setupTests.js
================
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

================
File: package.json
================
{
  "name": "react-portfolio",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@fortawesome/fontawesome-svg-core": "^6.4.2",
    "@fortawesome/free-brands-svg-icons": "^6.4.2",
    "@fortawesome/free-solid-svg-icons": "^6.4.2",
    "@fortawesome/react-fontawesome": "^0.2.0",
    "@headlessui/react": "^1.7.17",
    "@heroicons/react": "^2.0.18",
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "@vercel/analytics": "^1.1.1",
    "aos": "^2.3.4",
    "devicons-react": "^1.3.0",
    "framer-motion": "^11.17.0",
    "lucide-react": "^0.471.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-icons": "^4.12.0",
    "react-particles": "^2.12.2",
    "react-router-dom": "^6.17.0",
    "react-scripts": "5.0.1",
    "sharp": "^0.33.5",
    "tsparticles-engine": "^2.12.0",
    "tsparticles-preset-big-circles": "^2.12.0",
    "tsparticles-slim": "^2.12.0",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "tailwindcss": "^3.3.5"
  }
}

================
File: process-hobby-images.js
================
const sharp = require('sharp');
const fs = require('fs').promises;
const path = require('path');

async function processHobbyImages(inputDir = 'public/hobby', outputDir = 'public/hobby/processed') {
  try {
    // Create processed directory if it doesn't exist
    await fs.mkdir(outputDir, { recursive: true });
    
    // Get all images in hobby directory
    const files = await fs.readdir(inputDir);
    const imageFiles = files.filter(file => 
      /\.(jpg|jpeg|png)$/i.test(file)
    );

    const sizes = {
      sm: 640,
      md: 1024,
      lg: 1920
    };

    for (const file of imageFiles) {
      console.log(`\nProcessing ${file}...`);
      const inputPath = path.join(inputDir, file);
      const baseName = path.basename(file, path.extname(file));

      for (const [size, width] of Object.entries(sizes)) {
        const outputPath = path.join(outputDir, `${baseName}-${size}.webp`);

        await sharp(inputPath)
          .resize(width)
          .webp({ quality: 60 })
          .blur(2)
          .toFile(outputPath);
        
        console.log(`Created ${outputPath}`);
      }
    }
    
    console.log('\nAll images processed successfully!');
  } catch (error) {
    console.error('Error processing images:', error);
  }
}

// Process images in the hobby directory
processHobbyImages();

================
File: README.md
================
# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can't go back!**

If you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.

You don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)

================
File: tailwind.config.js
================
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}", 
    './public/index.html',
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
